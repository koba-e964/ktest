     1 00000000                                 ; haribote-ipl_
     2 00000000                                 ; TAB=4
     3 00000000                                 
     4  = 0000000A                              CYLS  EQU    10        ;; 読み込むシリンダ数の設定
     5 00000000                                 
     6                                              ORG    0x7c00      ;; このプログラムの読み込み位置
     7 00007C00 EB 4E                               JMP    entry       ;; 本体コードへジャンプ
     8 00007C02                                 
     9 00007C02                                 ;; 以下は標準的なFAT12フォーマットフロッピーディスクのための記述
    10 00007C02                                 
    11 00007C02 90                                  nop         ; NULL
    12 00007C03 54 65 73 74 42 4F 4F 54             DB    "TestBOOT"   ; ブートセクタの名前を自由に書いてよい（8バイト）
    13 00007C0B 0200                                DW    512          ; 1セクタの大きさ（512にしなければいけない）
    14 00007C0D 01                                  DB    1            ; クラスタの大きさ（1セクタにしなければいけない）
    15 00007C0E 0001                                DW    1            ; FATがどこから始まるか（普通は1セクタ目からにする）
    16 00007C10 02                                  DB    2            ; FATの個数（2にしなければいけない）
    17 00007C11 00E0                                DW    224          ; ルートディレクトリ領域の大きさ（普通は224エントリにする）
    18 00007C13 0B40                                DW    2880         ; このドライブの大きさ（2880セクタにしなければいけない）
    19 00007C15 F0                                  DB    0xf0         ; メディアのタイプ（0xf0にしなければいけない）
    20 00007C16 0009                                DW    9            ; FAT領域の長さ（9セクタにしなければいけない）
    21 00007C18 0012                                DW    18           ; 1トラックにいくつのセクタがあるか（18にしなければいけない）
    22 00007C1A 0002                                DW    2            ; ヘッドの数（2にしなければいけない）
    23 00007C1C 00000000                            DD    0            ; パーティションを使ってないのでここは必ず0
    24 00007C20 00000B40                            DD    2880         ; このドライブ大きさをもう一度書く
    25 00007C24 00 00 29                            DB    0,0,0x29     ; よくわからないけどこの値にしておくといいらしい
    26 00007C27 C3FA31B8                            DD    0xc3fa31b8   ; たぶんボリュームシリアル番号
    27 00007C2B 54 65 73 74 4F 53 5F 30 33 63       DB    "TestOS_03c0"; ディスクの名前（11バイト）
       00007C35 30 
    28 00007C36 46 41 54 31 32 20 20 20             DB    "FAT12   "   ; フォーマットの名前（8バイト）
    29 00007C3E 00 00 00 00 00 00 00 00 00 00       RESB  18           ; とりあえず18バイトあけておく
       00007C48 00 00 00 00 00 00 00 00 
    30 00007C50                                 
    31 00007C50                                 
    32 00007C50                                 ;; -- START ---------------------------------------------------------
    33 00007C50                                 ;; ------------------------------------------------------------------
    34 00007C50                                 
    35 00007C50                                 entry:
    36 00007C50                                 
    37 00007C50 31 C0                               XOR    AX,AX     ;; セグメントの初期化
    38 00007C52 8E D0                               MOV    SS,AX     ;; SS = 0x00
    39 00007C54 BC 7C00                             MOV    SP,0x7c00 ;; SP = 0x7c00
    40 00007C57 8E D8                               MOV    DS,AX     ;; DS = 0x00
    41 00007C59                                 
    42 00007C59 B8 0820                             MOV    AX,0x0820 ;; ディスク読み込みの設定
    43 00007C5C 8E C0                               MOV    ES,AX     ;; ES = 0x0820
    44 00007C5E 30 ED                               XOR    CH,CH     ;; シリンダ
    45 00007C60 30 F6                               XOR    DH,DH     ;; ヘッド
    46 00007C62 B1 02                               MOV    CL,2      ;; セクタ
    47 00007C64                                 
    48 00007C64 B8 7CD6                             MOV    AX, msg_start ;; ipl10.nasの開始
    49 00007C67 E8 0059                             CALL   print         ;; デバッグ情報の出力
    50 00007C6A                                 
    51 00007C6A                                 ;; ------------------------------------
    52 00007C6A                                 ;; ディスクから読み込み
    53 00007C6A                                 ;; ------------------------------------
    54 00007C6A                                 
    55 00007C6A B8 7CE2                             MOV    AX, msg_read ;; 読み込み開始
    56 00007C6D E8 0053                             CALL   print        ;; デバッグ情報の出力
    57 00007C70                                 
    58 00007C70                                 readloop:
    59 00007C70                                 
    60 00007C70 31 F6                               XOR    SI,SI     ;; 読み込み失敗回数を数えるレジスタ
    61 00007C72                                 
    62 00007C72                                 retry:
    63 00007C72                                 
    64 00007C72 B4 02                               MOV    AH,0x02   ;; ディスク読み込み（BIOS）
    65 00007C74 B0 01                               MOV    AL,1      ;; 1セクタ
    66 00007C76 31 DB                               XOR    BX,BX     ;; バッファ（ES:BX）
    67 00007C78 30 D2                               XOR    DL,DL     ;; Aドライブ
    68 00007C7A CD 13                               INT    0x13      ;; BIOS CALL
    69 00007C7C 73 10                               JNC    next      ;; 成功ならnextへ進む
    70 00007C7E                                 
    71 00007C7E 46                                  INC    SI        ;; 読み込み失敗回数をインクリメント
    72 00007C7F 83 FE 05                            CMP    SI,5      ;; SIと5を比較
    73 00007C82 0F 83 009E                          JAE    error     ;; 読み込み失敗回数が5以上ならerrorへ進む
    74 00007C86                                 
    75 00007C86 30 E4                               XOR    AH,AH     ;; ドライブのリセット（BIOS）
    76 00007C88 30 D2                               XOR    DL,DL     ;; Aドライブ
    77 00007C8A CD 13                               INT    0x13      ;; BIOS CALL
    78 00007C8C EB E4                               JMP    retry     ;; 再チャレンジだ、このやろ〜
    79 00007C8E                                 
    80 00007C8E                                 next:
    81 00007C8E                                 
    82 00007C8E 8C C0                               MOV    AX,ES     ;; ES:BXを次のセクタを読み込むためのメモリアドレスにするため
    83 00007C90 05 0020                             ADD    AX,0x0020 ;; ESに512(0x200)を加算するのだが、セグメントに
    84 00007C93 8E C0                               MOV    ES,AX     ;; 定数を渡す命令は無いので、3つの命令で実現している
    85 00007C95 FE C1                               INC    CL        ;; セクタをインクリメント
    86 00007C97 80 F9 12                            CMP    CL,18     ;; CLと18を比較
    87 00007C9A 76 D4                               JBE    readloop  ;; 読み込みセクタ数が18以下ならreadloopへ進む
    88 00007C9C                                 
    89 00007C9C B1 01                               MOV    CL,1      ;; 18セクタ読み終えたので再び1に戻す
    90 00007C9E 80 C6 01                            ADD    DH,1      ;; ヘッダをインクリメント（次は裏側から読む）
    91 00007CA1 80 FE 02                            CMP    DH,2      ;; DHと2を比較
    92 00007CA4 72 CA                               JB     readloop  ;; まだ両面読み終わってないならreadloopへ進む
    93 00007CA6                                 
    94 00007CA6 30 F6                               XOR    DH,DH     ;; 両面読み終えたので再びヘッダを0に戻す
    95 00007CA8 80 C5 01                            ADD    CH,1      ;; シリンダをインクリメント
    96 00007CAB 80 FD 0A                            CMP    CH,CYLS   ;; CHとCYLSを比較
    97 00007CAE 72 C0                               JB     readloop  ;; 読み込んだシリンダ数が
    98 00007CB0                                                      ;; 読み込み予定のシリンダ数より小さいならreadloopへ進む
    99 00007CB0                                 
   100 00007CB0 B8 7D17                             MOV    AX, msg_ok ;; 読み込み完了
   101 00007CB3 E8 000D                             CALL   print      ;; デバッグ情報の出力
   102 00007CB6                                 
   103 00007CB6                                 
   104 00007CB6                                 ;; ------------------------------------
   105 00007CB6                                 ;; 読み込みデータの実行（haribote.sys）
   106 00007CB6                                 ;; ------------------------------------
   107 00007CB6                                 
   108 00007CB6 B8 7D00                             MOV    AX, msg_exec ;; 読み込みデータの実行
   109 00007CB9 E8 0007                             CALL   print        ;; デバッグ情報の出力
   110 00007CBC                                 
   111 00007CBC 88 2E 0FF0                          MOV    [0x0ff0],CH  ;; IPLがどこまで読んだのかをメモ
   112 00007CC0 E9 453D                             JMP    0xc200
   113 00007CC3                                 
   114 00007CC3                                 
   115 00007CC3                                 ;; ------------------------------------
   116 00007CC3                                 ;; 文字列の出力
   117 00007CC3                                 ;; ------------------------------------
   118 00007CC3                                 
   119 00007CC3                                 print:
   120 00007CC3                                 
   121 00007CC3                                     PUSHA
   122 00007CC3 89 C6                               MOV    SI,AX     ;; SIへ出力する文字列アドレスを入れる
   123 00007CC5                                 putloop:
   124 00007CC5 8A 04                               MOV    AL,[SI]   ;; 1文字読み込む
   125 00007CC7 3C 00                               CMP    AL,0      ;; 読み込んだ文字が0x00なら
   126 00007CC9 74 0A                               JE     putfin    ;; 文字の終端と判断してputfinへ進む
   127 00007CCB B4 0E                               MOV    AH,0x0e   ;; 一文字表示ファンクション
   128 00007CCD BB 000F                             MOV    BX,15     ;; カラーコード
   129 00007CD0 CD 10                               INT    0x10      ;; BIOS CALL
   130 00007CD2 46                                  INC    SI        ;; SIを次の文字のアドレスにする
   131 00007CD3 EB F0                               JMP    putloop
   132 00007CD5                                 putfin:
   133 00007CD5                                     POPA
   134 00007CD5 C3                                  ret
   135 00007CD6                                 
   136 00007CD6 0A 69 70 6C 31 30 2E 6E 61 73   msg_start: DB    0x0a, "ipl10.nas", 0x0a, 0
       00007CE0 0A 00 
   137 00007CE2 20 20 72 65 61 64 69 6E 67 20   msg_read:  DB    "  reading disk to memory ... ", 0
       00007CEC 64 69 73 6B 20 74 6F 20 6D 65 
       00007CF6 6D 6F 72 79 20 2E 2E 2E 20 00 
   138 00007D00 20 20 6A 75 6D 70 20 74 6F 20   msg_exec:  DB    "  jump to reading data", 0
       00007D0A 72 65 61 64 69 6E 67 20 64 61 
       00007D14 74 61 00 
   139 00007D17 6F 6B 21 0A 00                  msg_ok:    DB    "ok!", 0x0a, 0
   140 00007D1C 65 72 72 6F 72 21 0A 00         msg_error: DB    "error!", 0x0a, 0
   141 00007D24                                 
   142 00007D24                                 
   143 00007D24                                 ;; ------------------------------------
   144 00007D24                                 ;; エラー時の処理
   145 00007D24                                 ;; ------------------------------------
   146 00007D24                                 
   147 00007D24                                 error:
   148 00007D24                                 
   149 00007D24 B8 7D1C                             MOV    AX, msg_error ;; 読み込みデータの実行
   150 00007D27 E8 FF99                             CALL   print         ;; デバッグ情報の出力
   151 00007D2A                                 
   152 00007D2A 31 C0                               XOR    AX,AX
   153 00007D2C 8E C0                               MOV    ES,AX     ;; ES = 0x00
   154 00007D2E                                 
   155 00007D2E                                 fin:
   156 00007D2E                                 
   157 00007D2E F4                                  HLT              ;; 何かあるまでCPUを停止させる
   158 00007D2F EB FD                               JMP    fin       ;; 無限ループ
   159 00007D31                                                      ;; どこまでも続くループ、終わらない素敵なループ（電気グループ）
   160 00007D31                                 
   161 00007D31                                 ;; ------------------------------------------------------------------
   162 00007D31                                 ;; ----------------------------------------------------------- EOF --
   163 00007D31                                 
   164 00007D31                                 
   165 00007D31 00 00 00 00 00 00 00 00 00 00   RESB  0x7dfe-$   ;; 0x7dfeまでを0x00で埋める命令
       00007D3B 00 00 00 00 00 00 00 00 00 00 
       00007D45 00 00 00 00 00 00 00 00 00 00 
       00007D4F 00 00 00 00 00 00 00 00 00 00 
       00007D59 00 00 00 00 00 00 00 00 00 00 
       00007D63 00 00 00 00 00 00 00 00 00 00 
       00007D6D 00 00 00 00 00 00 00 00 00 00 
       00007D77 00 00 00 00 00 00 00 00 00 00 
       00007D81 00 00 00 00 00 00 00 00 00 00 
       00007D8B 00 00 00 00 00 00 00 00 00 00 
       00007D95 00 00 00 00 00 00 00 00 00 00 
       00007D9F 00 00 00 00 00 00 00 00 00 00 
       00007DA9 00 00 00 00 00 00 00 00 00 00 
       00007DB3 00 00 00 00 00 00 00 00 00 00 
       00007DBD 00 00 00 00 00 00 00 00 00 00 
       00007DC7 00 00 00 00 00 00 00 00 00 00 
       00007DD1 00 00 00 00 00 00 00 00 00 00 
       00007DDB 00 00 00 00 00 00 00 00 00 00 
       00007DE5 00 00 00 00 00 00 00 00 00 00 
       00007DEF 00 00 00 00 00 00 00 00 00 00 
       00007DF9 00 00 00 00 00 
   166 00007DFE 55 AA                           DB    0x55, 0xaa ;; 最後の2バイトは固定値
   167 00007E00                                 
